%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!1 &9166012729966273356
GameObject:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  serializedVersion: 6
  m_Component:
  - component: {fileID: 9166012729966273359}
  - component: {fileID: 9166012729966273358}
  - component: {fileID: 9166012729966273357}
  m_Layer: 0
  m_Name: Data type Manual
  m_TagString: Untagged
  m_Icon: {fileID: 0}
  m_NavMeshLayer: 0
  m_StaticEditorFlags: 0
  m_IsActive: 1
--- !u!4 &9166012729966273359
Transform:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 9166012729966273356}
  m_LocalRotation: {x: -0, y: -0, z: -0, w: 1}
  m_LocalPosition: {x: 94.69, y: -1.45, z: 0}
  m_LocalScale: {x: 0.1, y: 0.1, z: 1}
  m_ConstrainProportionsScale: 0
  m_Children: []
  m_Father: {fileID: 0}
  m_RootOrder: 0
  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
--- !u!212 &9166012729966273358
SpriteRenderer:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 9166012729966273356}
  m_Enabled: 1
  m_CastShadows: 0
  m_ReceiveShadows: 0
  m_DynamicOccludee: 1
  m_StaticShadowCaster: 0
  m_MotionVectors: 1
  m_LightProbeUsage: 1
  m_ReflectionProbeUsage: 1
  m_RayTracingMode: 0
  m_RayTraceProcedural: 0
  m_RenderingLayerMask: 1
  m_RendererPriority: 0
  m_Materials:
  - {fileID: 2100000, guid: a97c105638bdf8b4a8650670310a4cd3, type: 2}
  m_StaticBatchInfo:
    firstSubMesh: 0
    subMeshCount: 0
  m_StaticBatchRoot: {fileID: 0}
  m_ProbeAnchor: {fileID: 0}
  m_LightProbeVolumeOverride: {fileID: 0}
  m_ScaleInLightmap: 1
  m_ReceiveGI: 1
  m_PreserveUVs: 0
  m_IgnoreNormalsForChartDetection: 0
  m_ImportantGI: 0
  m_StitchLightmapSeams: 1
  m_SelectedEditorRenderState: 0
  m_MinimumChartSize: 4
  m_AutoUVMaxDistance: 0.5
  m_AutoUVMaxAngle: 89
  m_LightmapParameters: {fileID: 0}
  m_SortingLayerID: 0
  m_SortingLayer: 0
  m_SortingOrder: 0
  m_Sprite: {fileID: 21300000, guid: 3a073d6e7d03970489c884fc98a954f8, type: 3}
  m_Color: {r: 1, g: 1, b: 1, a: 1}
  m_FlipX: 0
  m_FlipY: 0
  m_DrawMode: 0
  m_Size: {x: 20.48, y: 20.48}
  m_AdaptiveModeThreshold: 0.5
  m_SpriteTileMode: 0
  m_WasSpriteAssigned: 1
  m_MaskInteraction: 0
  m_SpriteSortPoint: 0
--- !u!114 &9166012729966273357
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 9166012729966273356}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 236512c4a3a49b54fb771f843d7601ac, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  itemName: Data_type_Manual
  itemDescription: 'In C programming, a data type is a classification that specifies
    which type of value a variable can hold. Data types are crucial because they
    determine the amount of memory space required to store data and the operations
    that can be performed on that data.  Basic data type  1.int The int data type
    is used to store integer values (whole numbers). It has a default size of 4 bytes.
    2.char The char data type is used to store single characters. It has a default
    size of 1 byte. 3.float The float data type is used to store floating-point numbers
    (real numbers). It has a default size of 4 bytes. 4.double The double data type
    is used to store double-precision floating-point numbers. It has a default size
    of 8 bytes.  Ranges of data types int: -2,147,483,648 to 2,147,483,647 char:
    -128 to 127 or 0 to 255 float: 3.4e-38 to 3.4e38 (6 decimal places) double: 1.7e-308
    to 1.7e308 (15 decimal places)  How to declare variable To declare a variable,
    you specify the data type followed by the variable name. int age;           
    // Declaration of an integer variable char initial;       // Declaration of a
    character variable float temperature;  // Declaration of a float variable double
    salary;      // Declaration of a double variable  You can also initialize and
    assign value to the variable at the same time of declaring int count = 10;    
    // Declaration and initialization of an integer variable char letter = ''C''; 
    // Declaration and initialization of a character variable '
  pic: {fileID: 21300000, guid: 3a073d6e7d03970489c884fc98a954f8, type: 3}
